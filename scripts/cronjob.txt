# Edit this file to introduce tasks to be run by cron.
# 
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
# 
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').# 
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
# 
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
# 
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
# 
# For more information see the manual pages of crontab(5) and cron(8)
# 
# m h  dom mon dow   command
#01 05 * * * /home/pi/Music/pimusic/scripts/wakeup.sh >> /home/pi/Music/cronerror.log
#45 06 * * * /home/pi/Music/pimusic/scripts/morning_playlist.sh >> /home/pi/Music/cronerror.log
#30 17 * * * /home/pi/Music/pimusic/scripts/evening_playlist.sh >> /home/pi/Music/cronerror.log
#30 22 * * * /home/pi/Music/pimusic/scripts/vaishu.sh > /home/pi/Music/cronerror.log
01 05 * * * /usr/bin/python /home/pi/Music/pimusic/scripts/control.py wakeup.m3u
10 07 * * 1,2,3,5,6,7 /usr/bin/python /home/pi/Music/pimusic/scripts/control.py exam.m3u 
45 07 * * * /usr/bin/python /home/pi/Music/pimusic/scripts/control.py morning.m3u
30 17 * * * /usr/bin/python /home/pi/Music/pimusic/scripts/control.py
30 22 * * * /usr/bin/python /home/pi/Music/pimusic/scripts/control.py vaishu.m3u

# Run every 5 minutes from 7:00 AM to 7:15 AM, weekdays (Mon-Fri)
0,5,10,15 7 * * 1-5 /home/pi/Music/pimusic/scripts/bus_speak.sh

# Run every 2 minutes from 7:15 AM to 7:23 AM, weekdays (Mon-Fri)
15,17,19,21,23 7 * * 1-5 /home/pi/Music/pimusic/scripts/bus_speak.sh

# Run every minute from 7:23 AM to 7:27 AM, weekdays (Mon-Fri)
23-27 7 * * 1-5 /home/pi/Music/pimusic/scripts/bus_speak.sh
